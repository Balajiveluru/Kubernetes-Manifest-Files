apiVersion: apps/v1
kind: Deployment
metadata:
  name: springbootdeployment
  namespace: test-ns
spec:
  replicas: 2
  selector:
    matchLabels:
      app: springbootapp
  template:
    metadata:
      name: springbootpod
      labels:
        app: springbootapp
    spec:
      containers:
      - name: springbootappcontainer
        image: dockerhandson/spring-boot-mongo:1
        resources:
          requests:
            cpu: "200m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        ports:
        - containerPort: 8080
        env:
        - name: MONGO_DB_HOSTNAME
          value: mongosvc
        - name: MONGO_DB_USERNAME
          value: devdb
        - name: MONGO_DB_PASSWORD
          value: devdb@123
---
apiVersion: v1
kind: Service
metadata:
  name: springbootsvc
  namespace: test-ns
spec:
  type: NodePort
  selector:
    app: springbootapp
  ports:
  - port: 80
    targetPort: 8080
    nodePort: 30000
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: mongodb
  namespace: test-ns
spec:
  selector:
    matchLabels:
      app: mongodbapp
  template:
    metadata:
      name: mongodbpod
      labels:
        app: mongodbapp
    spec:
      containers:
      - name: mongodbcontainer
        image: mongo
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: devdb
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: devdb@123
        volumeMounts:
        - name: nfsvol
          mountPath: /data/db
      volumes:
      - name: nfsvol
        nfs:
          server: 172.31.27.120
          path: /mnt/nfs_share
---
apiVersion: v1
kind: Service
metadata:
  name: mongosvc
  namespace: test-ns
spec:
  type: ClusterIP
  selector:
    app: mongodbapp
  ports:
  - port: 27017
    targetPort: 27017
