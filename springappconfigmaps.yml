apiVersion: apps/v1
kind: Deployment
metadata:
  name: springbootdeployment
  namespace: test-ns
spec:
  replicas: 2
  selector:
    matchLabels:
      app: springbootapp
  template:
    metadata:
      name: springbootpod
      labels:
        app: springbootapp
    spec:
      containers:
        - name: springbootappcontainer
          image: dockerhandson/spring-boot-mongo:1
          resources:
            requests:
              cpu: 200m
              memory: 250Mi
            limits:
              cpu: 400m
              memory: 500Mi
          ports:
            - containerPort: 8080
          env:
            - name: MONGO_DB_HOSTNAME
              value: mongodbsvc
            - name: MONGO_DB_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: springappconfig
                  key: mongodbusername
            - name: MONGO_DB_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: springappconfig
                  key: mongodbpassword

---
apiVersion: v1
kind: Service
metadata:
  name: springbootsvc
  namespace: test-ns
spec:
  type: NodePort
  selector:
    app: springbootapp
  ports:
    - port: 80
      targetPort: 8080
      nodePort: 30000

---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: mongodbrs
  namespace: test-ns
spec:
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      name: mongodbpod
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongodbcontainer
          image: mongo
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongodbvol
              mountPath: /data/db
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: springappconfig
                  key: mongodbusername
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: springappconfig
                  key: mongodbpassword
      volumes:
        - name: mongodbvol
          persistentVolumeClaim:
            claimName: mongopvc

---
apiVersion: v1
kind: Service
metadata:
  name: mongodbsvc
  namespace: test-ns
spec:
  type: ClusterIP
  selector:
    app: mongodb
  ports:
    - port: 27017
      targetPort: 27017

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongopvc
  namespace: test-ns
spec:
  resources:
    requests:
      storage: 500Mi
  accessModes:
    - ReadWriteOnce

